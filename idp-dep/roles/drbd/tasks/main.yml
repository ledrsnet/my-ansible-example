---
#- name: Print hostnames and IPs of webserver group
#  debug:
#    msg: "{{ groups['nfs-server'][0] }} has hostname {{ hostvars[groups['nfs-server'][0]]['ansible_hostname'] }}"
#- name: Print hostnames and IPs of webserver group
#  debug:
#    msg: "{{ groups['nfs-server'][0] }} has IP address {{ hostvars[groups['nfs-server'][0]]['ansible_host'] }}"
- name: Add host entry to /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
  with_items:
    - "{{ groups['nfs-server'][0] }} {{ hostvars[groups['nfs-server'][0]]['ansible_hostname'] }}"
    - "{{ groups['nfs-server'][1] }} {{ hostvars[groups['nfs-server'][1]]['ansible_hostname'] }}"

- name: Update apt cache
  apt:
    update_cache: yes
  when: "ansible_distribution == 'Ubuntu'"

- name: Install drbd
  package:
    name: "{{ item }}"
    state: present
  when: "ansible_distribution == 'Ubuntu'"
  with_items:
    - "drbd-utils"
    - "drbd-dkms"

- name: Copy RPM file to remote host
  copy:
    src: files/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
    dest: /tmp/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
  when: "ansible_distribution == 'CentOS'"

- name: Install RPM file from local file
  yum:
    name: /tmp/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
    state: present
  when: "ansible_distribution == 'CentOS'"

- name: Install drbd
  package:
    name: "{{ item }}"
    state: present
  when: "ansible_distribution == 'CentOS'"
  with_items:
    - "epel-release"
    - "drbd90-utils"
    - "kmod-drbd90"

- name: Load DRBD kernel module
  modprobe:
    name: drbd
  
- name: Initial modprobe drbd
  copy:
    src: "drbd.modules"
    dest: "/etc/sysconfig/modules/drbd.modules"
    owner: root
    group: root
    mode: '0777'
  when: "ansible_distribution == 'CentOS'"
  
- name: Initial modprobe drbd on Ubuntu
  lineinfile:
    path: /etc/modules
    line: 'drbd'
  when: "ansible_distribution != 'CentOS'"
  
- name: Create nfs res configuration
  template:
    src: nfs.res.j2
    dest: /etc/drbd.d/nfs.res

- name: Create md nfs
  shell: drbdadm create-md nfs && touch /etc/drbd.d/check-create-md
  args:
    creates: /etc/drbd.d/check-create-md

- name: Check the status of a service
  command: drbdadm status nfs
  register: service_status
  ignore_errors: true

- name: Start drbd
  shell: drbdadm up nfs
  when: service_status.stderr.find("No such resource") != -1

- name:  Set drbd primary
  shell: drbdadm primary --force nfs
  when: "ansible_hostname == hostvars[groups['nfs-server'][0]]['ansible_hostname']"
  
- name: Util drbdadm nfs Update
  shell: drbdadm status nfs
  register: result
  until: result.stdout.find("peer-disk:Inconsistent") == -1
  retries: 10000
  delay: 60

- name: Enable drbd service
  systemd:
    name: drbd.service
    enabled: true
    state: started

- name: Create "{{ nfs.nfs_path }}" Directory
  file:
    path: "{{ nfs.nfs_path }}"
    state: directory

- name: Check if disk is formmatted
  shell: lsblk -f | grep drbd0
  register: disk_status
  changed_when: false

- name: Format disk if not formatted
  filesystem:
    fstype: xfs
    dev: /dev/drbd0
  when: disk_status.stdout.find("xfs") == -1 and ansible_hostname == hostvars[groups['nfs-server'][0]]['ansible_hostname']

- name: Check the mounted of a drbd
  shell: df -hT | grep drbd0
  register: mount_status
  ignore_errors: true
  when: "ansible_hostname == hostvars[groups['nfs-server'][0]]['ansible_hostname']"
- name: Mount /dev/drbd0 partition to "{{ nfs.nfs_path }}" directory
  shell: mount /dev/drbd0 "{{ nfs.nfs_path }}"
  when: ansible_hostname == hostvars[groups['nfs-server'][0]]['ansible_hostname'] and mount_status.stdout.find("drbd") == -1
