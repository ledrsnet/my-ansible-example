---
- name: Print hostnames and IPs of webserver group
  debug:
    msg: "{{ groups['nfs-server'][0] }} has hostname {{ hostvars[groups['nfs-server'][0]]['ansible_hostname'] }}"
#- name: Print hostnames and IPs of webserver group
#  debug:
#    msg: "{{ groups['nfs-server'][0] }} has IP address {{ hostvars[groups['nfs-server'][0]]['ansible_host'] }}"
#- name: Add host entry to /etc/hosts
#  lineinfile:
#    path: /etc/hosts
#    line: "{{ item }}"
#  with_items:
#    - "{{ hostvars[groups['nfs-server'][0]]['ansible_host'] groups['nfs-server'][0] }}"
#    - "{{ hostvars[groups['nfs-server'][1]]['ansible_host'] groups['nfs-server'][1] }}"
#    - "{{ groups['nfs-server'][1]}} nfs-server2"
# - name: Update apt cache
#   apt:
#     update_cache: yes
#   when: "ansible_distribution == 'Ubuntu'"
# - name: Install drbd
#   package:
#     name: "{{ item }}"
#     state: present
#   when: "ansible_distribution == 'Ubuntu'"
#   with_items:
#     - "drbd-utils"
#     - "drbd-dkms"
# - name: Copy RPM file to remote host
#   copy:
#     src: files/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
#     dest: /tmp/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
#   when: "ansible_distribution == 'CentOS'"
# - name: Install RPM file from local file
#   yum:
#     name: /tmp/elrepo-release-7.0-6.el7.elrepo.noarch.rpm
#     state: present
#   when: "ansible_distribution == 'CentOS'"
# - name: Install drbd
#   package:
#     name: "{{ item }}"
#     state: present
#   when: "ansible_distribution == 'CentOS'"
#   with_items:
#     - "epel-release"
#     - "drbd90-utils"
#     - "kmod-drbd90"
# - name: Load DRBD kernel module
#   modprobe:
#     name: drbd
#   
# - name: Initial modprobe drbd
#   copy:
#     src: "drbd.modules"
#     dest: "/etc/sysconfig/modules/drbd.modules"
#     owner: root
#     group: root
#     mode: '0777'
# - name: Create nfs res configuration
#   template:
#     src: nfs.res.j2
#     dest: /etc/drbd.d/nfs.res
# - name: Start drbd
#   shell: drbdadm up nfs
# - name: Install package if not already installed
#   shell: drbdadm status nfs
#   register: result
#   when: "'peer-disk:UpToDate' not in result.stdout"
# - name: Enable drbd service
#   systemd:
#     name: drbd.service
#     enabled: true
#     state: started
